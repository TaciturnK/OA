# 配置根Logger,注意第一个参数为记录日志的级别，之后的参数为日志输出的平台(控制台，文件，邮件，数据库等)，根据自己的需要配置相关节点名称
log4j.rootLogger=warn, stdout,DATABASE,file,fileError

########################
# 指定某个包下面的日志输出级别
#######################
log4j.logger.org.hibernate=error
log4j.logger.org.springframework=error
log4j.logger.com.mchange=error
log4j.logger.cn.taowd.oa=info
log4j.addivity.org.apache=error
log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=DEBUG  
log4j.logger.org.hibernate.type.descriptor.sql.BasicExtractor=DEBUG  
log4j.logger.org.hibernate.SQL=DEBUG  
log4j.logger.org.hibernate.engine.QueryParameters=DEBUG  
log4j.logger.org.hibernate.engine.query.HQLQueryPlan=DEBUG  

########################
# 输出到控制台的日志格式配置
#######################
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH\:mm\:ss} %l %m%n

###################################################当前使用的写日志文件方式##########################

########################
# 将日志写到文件中  输出到文件(这里默认为追加方式)  
#######################
# 这里使用原生的写日志的方法，打印Threshold级别以上的日志
log4j.appender.file=org.apache.log4j.FileAppender 
#输出文件位置  
log4j.appender.file.File=log/log4jInfo.log  
#是否在原日志基础上追加输出日志。true，默认，追加。false，清掉原来日志重新添加  
log4j.appender.file.Append=true  
log4j.appender.file.Threshold = INFO
#日志输出采用自定义格式   （可以灵活地指定布局模式）
log4j.appender.file.layout=org.apache.log4j.PatternLayout  
log4j.appender.file.layout.ConversionPattern=[%-d{yyyy-MM-dd HH:mm:ss}]-[%t-%5p]-[%C-%M(%L)]: %m%n
 
# 这是使用重写后的RollingFileAppender方法，只输出等于Threshold级别的日志
log4j.appender.fileError=cn.taowd.oa.util.MyRollingFileAppender 
#输出文件位置  
log4j.appender.fileError.File=log/log4jError.log  
#是否在原日志基础上追加输出日志。true，默认，追加。false，清掉原来日志重新添加  
log4j.appender.fileError.Append=true  
log4j.appender.fileError.Threshold = ERROR
#日志输出采用自定义格式   （可以灵活地指定布局模式）
log4j.appender.fileError.layout=org.apache.log4j.PatternLayout  
log4j.appender.fileError.layout.ConversionPattern=[%-d{yyyy-MM-dd HH:mm:ss}]-[%t-%5p]-[%C-%M(%L)]: %m%n

 
###################################################当前使用的写日志文件方式##########################
 
########################
# 将日志写到文件中:按大小滚动文件(这里默认为追加方式) 
#######################  
log4j.appender.rolling_file=org.apache.log4j.RollingFileAppender   
#输出文件位置  
log4j.appender.rolling_file.File=logs/rolling_log4j.log  
#是否在原日志基础上追加输出日志。true，默认，追加。false，清掉原来日志重新添加  
log4j.appender.rolling_file.Append=true  
#文件达到最大值自动更名  
log4j.appender.rolling_file.MaxFileSize=2048KB  
#最多备份100个文件  
log4j.appender.rolling_file.MaxBackupIndex=100  
log4j.appender.rolling_file.layout=org.apache.log4j.PatternLayout  
log4j.appender.rolling_file.layout.ConversionPattern=[%-d{yyyy-MM-dd HH:mm:ss}]-[%t-%5p]-[%C-%M(%L)]: %m%n


########################
# 将日志写到文件中:按日期滚动文件(这里默认为追加方式) 
#######################   
log4j.appender.daily_rolling_file=org.apache.log4j.DailyRollingFileAppender   
#输出文件位置  
log4j.appender.daily_rolling_file.File=log/daily_rolling_log4j.log  
#文件滚动日期格式  
#每天：.YYYY-MM-dd（默认）  
#每星期：.YYYY-ww  
#每月：.YYYY-MM  
#每隔半天：.YYYY-MM-dd-a  
#每小时：.YYYY-MM-dd-HH  
#每分钟：.YYYY-MM-dd-HH-mm  
#log4j.appender.daily_rolling_file.DatePattern=.yyyy-MM-dd  
log4j.appender.daily_rolling_file.DatePattern=.YYYY-MM-dd-HH-mm  
#日志编码  
log4j.appender.daily_rolling_file.Encoding=UTF-8  
#日志格式 
log4j.appender.daily_rolling_file.layout=org.apache.log4j.PatternLayout  
log4j.appender.daily_rolling_file.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH\:mm\:ss} %l %m%n

########################
# 保存日志到数据库中，注意数据库中的表必须提前建好，配置中的sql必须自己编写
#######################
log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test
log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver
log4j.appender.DATABASE.user=root
log4j.appender.DATABASE.password=root
log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES ('%-5p %d{yyyy-MM-dd HH\:mm\:ss} %l %m%n')
log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout
log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n


########################
# SMTP Appender  发送邮件
#######################
##log4j的邮件发送appender，如果有必要你可以写自己的appender
#log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
##发送邮件的门槛，仅当等于或高于ERROR（比如FATAL）时，邮件才被发送
#log4j.appender.MAIL.Threshold=ERROR
##缓存文件大小，日志达到10k时发送Email
#log4j.appender.MAIL.BufferSize=10
##发送邮件的邮箱帐号
#log4j.appender.MAIL.From=15769229463@163.com
##SMTP邮件发送服务器地址
#log4j.appender.MAIL.SMTPHost=smtp.163.com
##SMTP发送认证的帐号名
#log4j.appender.MAIL.SMTPUsername=15769229463@163.com
##SMTP发送认证帐号的密码
#log4j.appender.MAIL.SMTPPassword=twd123
##是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息
#log4j.appender.MAIL.SMTPDebug=false
##邮件主题
#log4j.appender.MAIL.Subject=Log4JErrorMessage
##发送到什么邮箱，如果要发送给多个邮箱，则用逗号分隔；
##如果需要发副本给某人，则加入下列行
##log4j.appender.MAIL.Bcc=xxx@xxx.xxx
#log4j.appender.MAIL.To=546642132@qq.com
#log4j.appender.MAIL.layout=cn.taowd.oa.util.MailEvaluator


